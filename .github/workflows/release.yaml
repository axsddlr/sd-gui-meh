name: "Release"

on: # yamllint disable-line rule:truthy
  push:
    tags:
      - "**"

jobs:
  release:
    name: "Release"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Determine tag"
        run: 'echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV'

      - name: "Get last tag"
        id: "lasttag"
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: "0.0.0"

      - name: "Fetch commits"
        id: "commits"
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.RELEASE_TOKEN }}"
          script: |
            const comparison = await github.rest.repos.compareCommits({
              base: "${{ steps.lasttag.outputs.tag }}",
              head: process.env.RELEASE_TAG,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const commitList = comparison.data.commits.map(commit => commit.sha + ": " + commit.commit.message).join("\n");
            return commitList;

      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.RELEASE_TOKEN }}"
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
                body: "${{ steps.commits.outputs.result }}"
              });

              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }
